{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo\\\\dae_api\\\\src\\\\components\\\\InvitacionForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable react/react-in-jsx-scope */\nimport { useContext, useState, useEffect, useRef } from 'react';\nimport { Autocomplete, TextField, Typography, Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport useAxios from '../utils/useAxios';\nimport LoadContext from '../context/LoadContext';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport { applyInitialState } from '@mui/x-data-grid/hooks/features/columns/gridColumnsUtils';\nimport { object } from 'joi'; // eslint-disable-next-line react/prop-types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InvitacionForm(_ref) {\n  _s();\n\n  let {\n    data,\n    agregarInvi,\n    invitados\n  } = _ref;\n  const {\n    setPost,\n    setAlert\n  } = useContext(LoadContext);\n  const [users, setUsers] = useState([]);\n  const [option, setOption] = useState([]);\n  const [message, setMessage] = useState(''); // const navigate = useNavigate();\n  // const { loginUser } = useContext(AuthContext);\n\n  const api = useAxios();\n\n  const filtrar = async e => {\n    if (e.target.value) {\n      let url = `/getestemail/?search=${e.target.value}`;\n      const response = await api.get(url);\n      let arr2 = [];\n      response.data.forEach(e => {\n        console.log(e);\n        e = { ...e,\n          \"disabled\": false\n        };\n        console.log(e);\n        invitados ? invitados.forEach(inv => console.log(inv['user_id'])) : console.log(\"hola\");\n\n        if (invitados && invitados.some(el => el['user_id'] === e)) {\n          e.disabled = true;\n          console.log(e);\n          arr2.push(e);\n        } else {\n          arr2.push(e);\n        }\n      });\n      setOption(arr2); //   let obj = [...response.data, \"disabled\":true]\n      //   setOption(obj)\n      // }else{\n      //   let obj2 = [...response.data, \"disabled\":false]\n      //   setOption(obj2)\n      // }\n    }\n  };\n\n  const HandleSubmit = valores => {\n    let arrInvi = [...invitados, valores];\n    agregarInvi(arrInvi);\n    setOption([]);\n  };\n\n  const validationSchema = yup.object({\n    user_id: yup.object({\n      id: yup.number().required(),\n      username: yup.string().required(),\n      email: yup.string().email(\"Ingresa un correo inacap válido\").required(\"Campo Obligatorio\")\n    })\n  });\n  const formik = useFormik({\n    initialValues: {\n      user_id: {\n        id: null,\n        username: '',\n        email: ''\n      }\n    },\n    validationSchema,\n    onSubmit: values => {\n      HandleSubmit(values);\n      formik.resetForm({\n        values: {\n          user_id: \"\"\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      padding: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justiItems: 'center',\n          width: '100%'\n        },\n        children: [users ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"user_id\",\n          name: \"user_id\",\n          options: option,\n          filterOptions: x => x,\n          getOptionLabel: option => option.email,\n          getOptionDisabled: option => option.disabled,\n          style: {\n            width: '100%'\n          },\n          clearOnBlur: true,\n          value: null // onChange={(e,value) => {\n          //   formik.setFieldValue(\n          //     'user_id',\n          //     value !== null ? value : formik.initialValues.user_id,\n          //   );\n          // }}\n          ,\n          onChange: (e, value) => {\n            if (invitados.length > 0 && invitados.find(e => e.user_id === value)) {\n              value = formik.initialValues.user_id;\n            } else {\n              formik.setFieldValue('user_id', value !== null ? value : formik.initialValues.user_id);\n            }\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            label: \"estudiantes\",\n            fullWidth: true,\n            name: \"email\",\n            onChange: e => filtrar(e),\n            ...params,\n            error: formik.touched.email && Boolean(formik.errors.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          endIcon: /*#__PURE__*/_jsxDEV(PersonAddAlt1Icon, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 68\n          }, this),\n          children: \" Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InvitacionForm, \"ncerNOua/oDypyEMf6IsoXSndGM=\", false, function () {\n  return [useAxios, useFormik];\n});\n\n_c = InvitacionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvitacionForm\");","map":{"version":3,"names":["useContext","useState","useEffect","useRef","Autocomplete","TextField","Typography","Button","Box","yup","useFormik","useAxios","LoadContext","PersonAddAlt1Icon","applyInitialState","object","InvitacionForm","data","agregarInvi","invitados","setPost","setAlert","users","setUsers","option","setOption","message","setMessage","api","filtrar","e","target","value","url","response","get","arr2","forEach","console","log","inv","some","el","disabled","push","HandleSubmit","valores","arrInvi","validationSchema","user_id","id","number","required","username","string","email","formik","initialValues","onSubmit","values","resetForm","width","padding","handleSubmit","display","flexDirection","alignItems","justiItems","x","length","find","setFieldValue","params","touched","Boolean","errors"],"sources":["C:/Users/Pablo/dae_api/src/components/InvitacionForm.jsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Autocomplete, TextField, Typography, Button\r\n} from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport  * as yup from 'yup'\r\nimport { useFormik } from 'formik';\r\nimport useAxios from '../utils/useAxios';\r\nimport LoadContext from '../context/LoadContext';\r\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\r\nimport { applyInitialState } from '@mui/x-data-grid/hooks/features/columns/gridColumnsUtils';\r\nimport { object } from 'joi';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default function InvitacionForm({data, agregarInvi, invitados}) {\r\n  const { setPost, setAlert } = useContext(LoadContext);\r\n  const [users, setUsers] = useState([])\r\n  const [option, setOption] = useState([])\r\n  const [message, setMessage] = useState('');\r\n  \r\n  // const navigate = useNavigate();\r\n\r\n  // const { loginUser } = useContext(AuthContext);\r\n\r\n  const api = useAxios();\r\n\r\n  \r\n  const filtrar = async (e)=>{\r\n\r\n    if(e.target.value){\r\n      let url = `/getestemail/?search=${e.target.value}`\r\n      const response = await api.get(url)\r\n      let arr2 = []\r\n      response.data.forEach(e => {\r\n        console.log(e)\r\n        e = {...e, \"disabled\":false}\r\n        console.log(e)\r\n        invitados ? invitados.forEach(inv => console.log(inv['user_id'])): console.log(\"hola\")\r\n        \r\n        if(invitados && invitados.some(el => el['user_id'] === e)){\r\n          \r\n          e.disabled = true\r\n          console.log(e)\r\n          arr2.push(e) \r\n        \r\n        }else{\r\n        arr2.push(e)\r\n        }\r\n      }\r\n        \r\n      )\r\n      setOption(arr2)\r\n        \r\n        //   let obj = [...response.data, \"disabled\":true]\r\n        //   setOption(obj)\r\n        // }else{\r\n        //   let obj2 = [...response.data, \"disabled\":false]\r\n        //   setOption(obj2)\r\n        // }\r\n        \r\n     \r\n      \r\n    }\r\n  }\r\n\r\n  const HandleSubmit = (valores) => {\r\n    \r\n  \r\n    let arrInvi = [...invitados,valores]\r\n    \r\n    agregarInvi(arrInvi)\r\n    setOption([])\r\n    \r\n  };\r\n\r\n \r\nconst validationSchema = yup.object({\r\n  user_id: yup.object({\r\n    id: yup.number().required(),\r\n    username: yup.string().required(),\r\n    email: yup.string().email(\"Ingresa un correo inacap válido\").required(\"Campo Obligatorio\")\r\n\r\n  })\r\n \r\n})\r\n \r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      user_id: {\r\n        id: null, username: '', email: '',\r\n      }\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      \r\n      HandleSubmit(values);\r\n      formik.resetForm({values:{\r\n        user_id: \"\"\r\n     \r\n      }});\r\n      \r\n     \r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box sx={{width: '100%', padding: 2}}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        \r\n        <Box sx={{display:'flex', flexDirection:'column', alignItems:'center', justiItems:'center', width:'100%'}}>\r\n          {users ? (\r\n            <Autocomplete\r\n          \r\n              id=\"user_id\"\r\n              name=\"user_id\"\r\n              options = {option}\r\n              filterOptions = {(x)=>x}\r\n              getOptionLabel={(option) => option.email}\r\n              getOptionDisabled={(option)=>option.disabled}\r\n              style ={{width: '100%'}}\r\n              clearOnBlur={true}\r\n              value={null}\r\n              \r\n              \r\n              \r\n              \r\n              // onChange={(e,value) => {\r\n              //   formik.setFieldValue(\r\n              //     'user_id',\r\n              //     value !== null ? value : formik.initialValues.user_id,\r\n                  \r\n              //   );\r\n              // }}\r\n              onChange={(e,value) => {\r\n              \r\n              \r\n              if(invitados.length > 0 && (invitados.find(e => e.user_id === value))){\r\n\r\n                value = formik.initialValues.user_id\r\n                \r\n              }else{\r\n                formik.setFieldValue(\r\n                  'user_id',\r\n                  value !== null ? value: formik.initialValues.user_id,\r\n                )\r\n              }\r\n             \r\n              \r\n              }\r\n              }\r\n            \r\n              renderInput={(params) => (\r\n                \r\n                <TextField\r\n                  \r\n                  margin=\"normal\"\r\n                  label=\"estudiantes\"\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  onChange={(e)=>filtrar(e)}\r\n                  {...params}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  \r\n                  \r\n                  \r\n                />\r\n              )}\r\n            />\r\n          ) : null}\r\n\r\n<Button color='primary' variant='contained' type=\"submit\" endIcon={<PersonAddAlt1Icon color='secondary' />}> Agregar</Button>\r\n          </Box>\r\n          \r\n\r\n        \r\n      </form>\r\n      </Box>\r\n\r\n\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}